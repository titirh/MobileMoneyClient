CREATE DATABASE MobileMoney;
Use MobileMoney;

CREATE TABLE Offres 
(
    `id_offre` INT PRIMARY KEY AUTO_INCREMENT,
    `nom` VARCHAR(30) NOT NULL,
    `montant` double NOT NULL,
    `type` VARCHAR(15) NOT NULL,
    `valeur` double NOT NULL,
    `code` VARCHAR(20)    
);

ALTER TABLE Offres AUTO_INCREMENT = 3000;

create table utilisateur(
    id_utilisateur int primary key AUTO_INCREMENT,
    token varchar(250), 
    username varchar(50),
    password varchar(255)
);

create table comptes(
    id_utilisateur int references utilisateur(id_utilisateur),
    credit double,
    solde double,
    mega double,
    appel double
); 

create table clients(
    id_utilisateur int references utilisateur(id_utilisateur),
    nom varchar(100),
    prenom varchar(100),
    date_naissance datetime,
    numero varchar(10)
);

create table mouvement_credit(
    id_mouvement int primary key AUTO_INCREMENT,
    id_utilisateur int references utilisateur(id_utilisateur),
    type varchar(100),
    id_offre int,
    montant double,
    date_mouvement datetime
);

create table mouvement_money(
    id_mouvement int primary key AUTO_INCREMENT,
    id_compte1 int references utilisateur(id_utilisateur),
    id_compte2 int references utilisateur(id_utilisateur),
    type varchar(100),
    montant double,
    date_mouvement datetime,
    reference varchar(100)
);

------new
ALTER TABLE Utilisateur AUTO_INCREMENT = 500000;

ALTER TABLE Comptes ADD CONSTRAINT FOREIGN KEY  (id_utilisateur) references utilisateur(id_utilisateur); 
ALTER TABLE Clients ADD CONSTRAINT FOREIGN KEY  (id_utilisateur) references utilisateur(id_utilisateur);
ALTER TABLE Mouvement_credit ADD CONSTRAINT FOREIGN KEY  (id_utilisateur) references utilisateur(id_utilisateur); 
--------

INSERT INTO Offres(nom,montant,type,valeur,code) VALUES('Mora 500',500,'Appel',10,'#322*50#');
INSERT INTO Offres(nom,montant,type,valeur,code) VALUES('Mora 100',100,'Appel',5,'#322*60#');

insert into clients values(1,'Rakoto','francis','1999-03-15 00:00:00','0341212312');
insert into clients values(2,'Rabe','koto','1999-03-15 00:00:00','0341212312');
insert into clients values(3,'Ranaivo','nirina','1999-03-15 00:00:00','0341212312');
insert into clients values(4,'Ralouis','gerard','1999-03-15 00:00:00','0341212312');
insert into clients values(5,'Rajean','bas','1999-03-15 00:00:00','0341212312');

insert into comptes values(1,100,5000,0,0);
insert into comptes values(2,0,0,0,0);
insert into comptes values(3,0,0,0,0);
insert into comptes values(4,0,0,0,0);
insert into comptes values(5,0,0,0,0);

insert into mouvement_credit values(1,1,'credit',0,5000,'2021-03-15 08:00:00');
insert into mouvement_credit values(0,1,'credit',0,1000,'2021-03-15 08:00:00');
insert into mouvement_credit values(0,2,'credit',0,500,'2021-03-15 08:00:00');
insert into mouvement_credit values(0,2,'credit',0,4000,'2021-03-15 08:00:00');
insert into mouvement_credit values(0,3,'credit',0,3000,'2021-03-15 08:00:00');
insert into mouvement_credit values(0,4,'credit',0,2500,'2021-03-15 08:00:00');

insert into mouvement_money values(1,1,1,'depot',3000,'2021-03-15 08:00:00','1234');
insert into mouvement_money values(0,1,1,'depot',25000,'2021-03-15 08:00:00','1234');
insert into mouvement_money values(0,1,2,'depot',600,'2021-03-15 08:00:00','1234');
insert into mouvement_money values(0,1,3,'depot',7500,'2021-03-15 08:00:00','1234');
insert into mouvement_money values(0,1,2,'depot',9600,'2021-03-15 08:00:00','1234');
insert into mouvement_money values(0,1,4,'depot',100000,'2021-03-15 08:00:00','1234');

create or replace view sumCredit as
select comptes.id_utilisateur,sum(mouvement_credit.montant) as credit,comptes.solde,
comptes.mega,comptes.appel from comptes left join mouvement_credit on comptes.id_utilisateur=mouvement_credit.id_utilisateur
where mouvement_credit.type='credit' group by mouvement_credit.id_utilisateur;

create or replace view sumDepot as
select comptes.id_utilisateur,comptes.credit,sum(mouvement_money.montant) as solde,
comptes.mega,comptes.appel from comptes left join mouvement_money on comptes.id_utilisateur=mouvement_money.id_compte2
where mouvement_money.type='depot' group by mouvement_money.id_compte2;

create or replace view sumTotal as
select sumcredit.id_utilisateur,sumcredit.credit,sumdepot.solde,sumcredit.mega,sumcredit.appel 
from sumcredit left join sumdepot on sumcredit.id_utilisateur=sumdepot.id_utilisateur ;

----- STATISTIQUES -----------

CREATE OR REPLACE VIEW OffresFavorisCredit AS
SELECT Count(Mouvement_credit.id_offre) as occurence,Offres.* FROM Mouvement_credit,Offres GROUP BY Mouvement_credit.id_offre ORDER BY occurence DESC Limit 10;
